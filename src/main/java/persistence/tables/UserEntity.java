/*
 * This file is generated by jOOQ.
 */
package persistence.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import persistence.DefaultSchema;
import persistence.Keys;
import persistence.tables.records.UserEntityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEntity extends TableImpl<UserEntityRecord> {

    private static final long serialVersionUID = -1439234832;

    /**
     * The reference instance of <code>USER ENTITY</code>
     */
    public static final UserEntity USER_ENTITY = new UserEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserEntityRecord> getRecordType() {
        return UserEntityRecord.class;
    }

    /**
     * The column <code>USER ENTITY.id</code>.
     */
    public final TableField<UserEntityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>USER ENTITY.audioHash</code>.
     */
    public final TableField<UserEntityRecord, String> AUDIOHASH = createField("audioHash", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>USER ENTITY.audioPath</code>.
     */
    public final TableField<UserEntityRecord, String> AUDIOPATH = createField("audioPath", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>USER ENTITY.imgPath</code>.
     */
    public final TableField<UserEntityRecord, String> IMGPATH = createField("imgPath", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>USER ENTITY</code> table reference
     */
    public UserEntity() {
        this(DSL.name("USER ENTITY"), null);
    }

    /**
     * Create an aliased <code>USER ENTITY</code> table reference
     */
    public UserEntity(String alias) {
        this(DSL.name(alias), USER_ENTITY);
    }

    /**
     * Create an aliased <code>USER ENTITY</code> table reference
     */
    public UserEntity(Name alias) {
        this(alias, USER_ENTITY);
    }

    private UserEntity(Name alias, Table<UserEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserEntity(Name alias, Table<UserEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserEntity(Table<O> child, ForeignKey<O, UserEntityRecord> key) {
        super(child, key, USER_ENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserEntityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserEntityRecord> getPrimaryKey() {
        return Keys.PK_USER_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<UserEntityRecord>>asList(Keys.PK_USER_ENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserEntity as(String alias) {
        return new UserEntity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserEntity as(Name alias) {
        return new UserEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserEntity rename(String name) {
        return new UserEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserEntity rename(Name name) {
        return new UserEntity(name, null);
    }
}
