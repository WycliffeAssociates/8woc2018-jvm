/*
 * This file is generated by jOOQ.
 */
package jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.DefaultSchema;
import jooq.Keys;
import jooq.tables.records.UserLanguagesEntityRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLanguagesEntity extends TableImpl<UserLanguagesEntityRecord> {

    private static final long serialVersionUID = -730156825;

    /**
     * The reference instance of <code>USER LANGUAGES ENTITY</code>
     */
    public static final UserLanguagesEntity USER_LANGUAGES_ENTITY = new UserLanguagesEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserLanguagesEntityRecord> getRecordType() {
        return UserLanguagesEntityRecord.class;
    }

    /**
     * The column <code>USER LANGUAGES ENTITY.userfk</code>.
     */
    public final TableField<UserLanguagesEntityRecord, Integer> USERFK = createField("userfk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USER LANGUAGES ENTITY.languagefk</code>.
     */
    public final TableField<UserLanguagesEntityRecord, Integer> LANGUAGEFK = createField("languagefk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USER LANGUAGES ENTITY.isSource</code>.
     */
    public final TableField<UserLanguagesEntityRecord, Integer> ISSOURCE = createField("isSource", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>USER LANGUAGES ENTITY</code> table reference
     */
    public UserLanguagesEntity() {
        this(DSL.name("USER LANGUAGES ENTITY"), null);
    }

    /**
     * Create an aliased <code>USER LANGUAGES ENTITY</code> table reference
     */
    public UserLanguagesEntity(String alias) {
        this(DSL.name(alias), USER_LANGUAGES_ENTITY);
    }

    /**
     * Create an aliased <code>USER LANGUAGES ENTITY</code> table reference
     */
    public UserLanguagesEntity(Name alias) {
        this(alias, USER_LANGUAGES_ENTITY);
    }

    private UserLanguagesEntity(Name alias, Table<UserLanguagesEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserLanguagesEntity(Name alias, Table<UserLanguagesEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserLanguagesEntity(Table<O> child, ForeignKey<O, UserLanguagesEntityRecord> key) {
        super(child, key, USER_LANGUAGES_ENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserLanguagesEntityRecord> getPrimaryKey() {
        return Keys.PK_USER_LANGUAGES_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserLanguagesEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<UserLanguagesEntityRecord>>asList(Keys.PK_USER_LANGUAGES_ENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserLanguagesEntity as(String alias) {
        return new UserLanguagesEntity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserLanguagesEntity as(Name alias) {
        return new UserLanguagesEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLanguagesEntity rename(String name) {
        return new UserLanguagesEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLanguagesEntity rename(Name name) {
        return new UserLanguagesEntity(name, null);
    }
}
