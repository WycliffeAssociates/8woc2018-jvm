/*
 * This file is generated by jOOQ.
 */
package jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.DefaultSchema;
import jooq.Keys;
import jooq.tables.records.LanguageEntityRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LanguageEntity extends TableImpl<LanguageEntityRecord> {

    private static final long serialVersionUID = -1692660841;

    /**
     * The reference instance of <code>LANGUAGE ENTITY</code>
     */
    public static final LanguageEntity LANGUAGE_ENTITY = new LanguageEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LanguageEntityRecord> getRecordType() {
        return LanguageEntityRecord.class;
    }

    /**
     * The column <code>LANGUAGE ENTITY.id</code>.
     */
    public final TableField<LanguageEntityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>LANGUAGE ENTITY.slug</code>.
     */
    public final TableField<LanguageEntityRecord, String> SLUG = createField("slug", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>LANGUAGE ENTITY.name</code>.
     */
    public final TableField<LanguageEntityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>LANGUAGE ENTITY.isGateway</code>.
     */
    public final TableField<LanguageEntityRecord, Integer> ISGATEWAY = createField("isGateway", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>LANGUAGE ENTITY.anglicizedName</code>.
     */
    public final TableField<LanguageEntityRecord, String> ANGLICIZEDNAME = createField("anglicizedName", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>LANGUAGE ENTITY</code> table reference
     */
    public LanguageEntity() {
        this(DSL.name("LANGUAGE ENTITY"), null);
    }

    /**
     * Create an aliased <code>LANGUAGE ENTITY</code> table reference
     */
    public LanguageEntity(String alias) {
        this(DSL.name(alias), LANGUAGE_ENTITY);
    }

    /**
     * Create an aliased <code>LANGUAGE ENTITY</code> table reference
     */
    public LanguageEntity(Name alias) {
        this(alias, LANGUAGE_ENTITY);
    }

    private LanguageEntity(Name alias, Table<LanguageEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private LanguageEntity(Name alias, Table<LanguageEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LanguageEntity(Table<O> child, ForeignKey<O, LanguageEntityRecord> key) {
        super(child, key, LANGUAGE_ENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LanguageEntityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LANGUAGE_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LanguageEntityRecord> getPrimaryKey() {
        return Keys.PK_LANGUAGE_ENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LanguageEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<LanguageEntityRecord>>asList(Keys.PK_LANGUAGE_ENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LanguageEntity as(String alias) {
        return new LanguageEntity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LanguageEntity as(Name alias) {
        return new LanguageEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LanguageEntity rename(String name) {
        return new LanguageEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LanguageEntity rename(Name name) {
        return new LanguageEntity(name, null);
    }
}
